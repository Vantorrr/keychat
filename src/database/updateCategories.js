const sqlite3 = require('sqlite3').verbose();
const { DB_PATH } = require('./init');

// –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π - –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ê—Ä–±–∏—Ç—Ä–∞–∂ –∏ –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥
async function updateCategories() {
    return new Promise((resolve, reject) => {
        const db = new sqlite3.Database(DB_PATH);

        db.serialize(() => {
            console.log('üóÑÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —á–∞—Ç–æ–≤...');

            // 1. –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ò–Ω—Ñ–æ–±–∏–∑ –∏ –ö—Ä–∏–ø—Ç–∞
            db.run(`UPDATE chat_categories SET is_active = 0 WHERE id IN (3, 4)`, (err) => {
                if (err) {
                    console.error('–û—à–∏–±–∫–∞ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', err);
                } else {
                    console.log('‚úÖ –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: –ò–Ω—Ñ–æ–±–∏–∑ –∏ –ö—Ä–∏–ø—Ç–∞');
                }
            });

            // 2. –ü–µ—Ä–µ–Ω–æ—Å–∏–º –≤—Å–µ —á–∞—Ç—ã –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ê—Ä–±–∏—Ç—Ä–∞–∂ (id = 1)
            db.run(`UPDATE user_chats SET category_id = 1 WHERE user_id = 0`, (err) => {
                if (err) {
                    console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —á–∞—Ç–æ–≤:', err);
                } else {
                    console.log('‚úÖ –í—Å–µ —á–∞—Ç—ã –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω—ã –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é "–ê—Ä–±–∏—Ç—Ä–∞–∂ —Ç—Ä–∞—Ñ–∏–∫–∞"');
                }
            });

            // 3. –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π - –ø–µ—Ä–µ–Ω–æ—Å–∏–º —Å —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–∞ –∞—Ä–±–∏—Ç—Ä–∞–∂
            db.run(`
                UPDATE user_subscriptions 
                SET category_id = 1 
                WHERE category_id IN (3, 4) AND is_active = 1
            `, (err) => {
                if (err) {
                    console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–æ–∫:', err);
                } else {
                    console.log('‚úÖ –ü–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω—ã –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é "–ê—Ä–±–∏—Ç—Ä–∞–∂"');
                }
            });

            // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Ç–æ–≥–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            db.all(`
                SELECT cc.name, COUNT(uc.id) as chat_count 
                FROM chat_categories cc 
                LEFT JOIN user_chats uc ON cc.id = uc.category_id AND uc.user_id = 0
                WHERE cc.is_active = 1
                GROUP BY cc.id, cc.name
                ORDER BY cc.id
            `, [], (err, rows) => {
                if (err) {
                    reject(err);
                } else {
                    console.log('\nüìä –ò—Ç–æ–≥–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:');
                    rows.forEach(row => {
                        console.log(`  ‚Ä¢ ${row.name}: ${row.chat_count} —á–∞—Ç–æ–≤`);
                    });
                    console.log('\nüéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
                    resolve();
                }
                db.close();
            });
        });
    });
}

// –ó–∞–ø—É—Å–∫ –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
    updateCategories().catch(console.error);
}

module.exports = { updateCategories };